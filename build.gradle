apply plugin: "de.fayard.buildSrcVersions"

buildscript {
    repositories {
        google()
        jcenter()
        gradlePluginPortal()
    }
    dependencies {
        classpath Libs.com_android_tools_build_gradle
        classpath Libs.kotlin_gradle_plugin
        classpath Libs.de_fayard_buildsrcversions_gradle_plugin
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        maven { url "https://jitpack.io" }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

subprojects {
    afterEvaluate { project ->
        if (project.plugins.findPlugin('android') ?: project.plugins.findPlugin('android-library')) {
            android {
                compileSdkVersion Config.compileSdkVersion
                buildToolsVersion Config.buildToolsVersion

                compileOptions {
                    sourceCompatibility Config.javaVersion
                    targetCompatibility Config.javaVersion
                }

                kotlinOptions {
                    jvmTarget = Config.javaVersion
                }

                defaultConfig {
                    minSdkVersion Config.mindSdkVersion
                    targetSdkVersion Config.targetSdkVersion
                    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
                    vectorDrawables.useSupportLibrary = true
                }

                signingConfigs {
                    release {
                        //Correct to set signing key is :
                        //to use local properties or environment variable or common build gradle file
                        storeFile file("signing/signing_key.jks")
                        storePassword '123456789'
                        keyAlias 'Rates'
                        keyPassword '123456789'
                    }
                }

                buildTypes {
                    debug {
                        debuggable true
                        minifyEnabled false
                    }

                    release {
                        minifyEnabled true
                        signingConfig signingConfigs.release
                        proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
                    }
                }

                flavorDimensions("endpoint")
                productFlavors {
                    dev {
                        dimension "endpoint"
                        buildConfigField 'String', 'BASE_URL', '"https://hiring.revolut.codes"'
                    }

                    prod {
                        dimension "endpoint"
                        buildConfigField 'String', 'BASE_URL', '"https://hiring.revolut.codes"'
                    }
                }

                variantFilter { variant ->
                    if (variant.buildType.name == 'release'
                            && variant.getFlavors().get(0).name == 'dev') {
                        variant.setIgnore(true)
                    }
                }
            }
        }

        dependencies {
            implementation Libs.kotlin_stdlib_jdk7
        }
    }
}